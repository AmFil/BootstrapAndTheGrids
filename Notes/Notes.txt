Grid 1, follow the format, mobile optimize

Grid 2, follow the format, no need to mobile optimize

Grid 3, This is the meaty one, no need to mobile optimize, desktop only

Video 4, nothing new, just mobile optimize


Video 5, structure this as seen in the image, use the order class to order divs for desktop to be in their proper
order (divs 1-3) with mobile order the divs to show up with divs 3 first, 2 second and 1 last. 

order-3
order-2
order-1

The order class in bootstrap 5 will allow you to organize things in mobile view to be ordered from top to bottom. In desktop view,
the order will be adjust for divs from left to right. 
Order 1 will appear at the top for mobile and on the far left for desktop, order 2 after that etc. etc.

You might not want to have to number all your divs with "order", maybe you want one dive to be last vertically, to do this,
type "order-last", you can also use "order-first" to do the opposite

All of this ^ can be used with break points. For specific sized devices, you can have elements appear in a certain order. 

Video 6 uses one row and grid breakpoints, you use one row because doing so allows you to re-order the columns in any way
you want. Basically, you'll set one div to 12 and the others to 6, doing this forces the other divs to wrap. When you do this, you NEED to remember
that technically, for the divs that have been wrapped under, top and bottom still apply, that does not change. gy-2 would
put a gutter for all divs including the ones on the bottom, no need to do that indivudally. COL 2 should appear last (mobile and desktop). For mobile, everything should appear vertically.

Video 7 Just like number 6 except you will be stretching each div to fit 100% of the width of the screen. copy and paste the code
inside the container of grid 6 into 7. With your div up underneath the nav bar you will need to add the following CSS

main>.container-fluid{
	padding-top: 60px;
} 


another option is to just add "mt-5" to the container itself. 

container-fluid will make everything within your container stretch the entire width of your device. Not sure how to do bleed over,
there's still a bit of a gutter. HOWEVER, you can adjust the different sizes of your divs according to the container sizes and
what device sizes they target. container-fluid will make the containers fill up the entire width of the container. 

Video 8 just add one more column, split the 2 6 columns into 4s and order column 2 to show up last.

Video 9 plays with break points again, this time for smaller devices, you add 4 columns underneath a large one for medium 
devices on up. Remove "container-fluid" Just recycle the code from video 8 and for small devices you make those columns larger so they wrap. Basically you get larger columns.For mobile you
should have one large column, and two divs next to each other per row, (remember, you don't make a new row, you use break points
and wrapping) hint, set smaller columns/divs to 6. 